/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ReceptionistWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.InternOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InternRequest;
import UserInterface.FarmerRole.LoanApplicationJPanel;
import UserInterface.FarmerRole.LoanStatusJPanel;
import UserInterface.FarmerRole.SuppliesStatusJPanel;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Jagman
 */
public class RaiseRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RaiseRequestJPanel
     */
    private JPanel container ;
    private EcoSystem system ; 
    private UserAccount account ; 
    private Enterprise enterprise ;
    private final static Logger LOGGER =  
                Logger.getLogger(Logger.GLOBAL_LOGGER_NAME); 
    public RaiseRequestJPanel(JPanel container , EcoSystem system ,Enterprise enterprise , UserAccount account) {
        initComponents();
        this.container = container ;
        this.system = system;
        this.account = account ;
        this.enterprise = enterprise ; 
        populateTable();
    }
    
    
    private void populateTable(){
    
        DefaultTableModel model = (DefaultTableModel)detailjTable.getModel();
        detailjTable.setRowSorter(new TableRowSorter(model));
        model.setRowCount(0);
         LOGGER.log(Level.INFO, "Farmer Value");
        for (UserAccount account : system.getUserAccountDirectory().getUserAccountList()) {
                   if(account.getFarmer() !=null && account.getFarmer().isIsNgoRegistered()) {
                     Object[] row = new Object[3];
                     row[0] = account.getFarmer();
                     row[1] = account.getFarmer().getEmail();
                     row[2] =account;
                     model.addRow(row);
                 
                   }
    
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailjTable = new javax.swing.JTable();
        searchjButton = new javax.swing.JButton();
        searchjTextField = new javax.swing.JTextField();
        SupplierStatus = new javax.swing.JButton();
        backBtton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        loanStatus1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Raise Request");

        detailjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Farmer Name", "Email Address", "UserName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(detailjTable);
        if (detailjTable.getColumnModel().getColumnCount() > 0) {
            detailjTable.getColumnModel().getColumn(0).setResizable(false);
            detailjTable.getColumnModel().getColumn(1).setResizable(false);
            detailjTable.getColumnModel().getColumn(2).setResizable(false);
        }

        searchjButton.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        searchjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/Other-Search-Metro-icon.png"))); // NOI18N
        searchjButton.setText("Search");
        searchjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchjButtonActionPerformed(evt);
            }
        });

        SupplierStatus.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        SupplierStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/request.png"))); // NOI18N
        SupplierStatus.setText("Check Supplier Status");
        SupplierStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupplierStatusActionPerformed(evt);
            }
        });

        backBtton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/arrow-back-icon.png"))); // NOI18N
        backBtton.setText("Back");
        backBtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBttonActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/request.png"))); // NOI18N
        jButton2.setText("Raise Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        loanStatus1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        loanStatus1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/request.png"))); // NOI18N
        loanStatus1.setText("Check Loan Status");
        loanStatus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loanStatus1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(backBtton)
                        .addGap(232, 232, 232)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(loanStatus1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(searchjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchjButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(SupplierStatus)))
                .addContainerGap(160, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backBtton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loanStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SupplierStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(328, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchjButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)detailjTable.getModel();
        TableRowSorter<DefaultTableModel> rowSorter
            = new TableRowSorter<DefaultTableModel>(model);
          detailjTable.setRowSorter(rowSorter); 
     
        
        
        String text = searchjTextField.getText();
        

                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                } else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
    }//GEN-LAST:event_searchjButtonActionPerformed

    private void backBttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBttonActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backBttonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
          Date date = new Date();
        int selectedRow = detailjTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request from the table","Info", JOptionPane.INFORMATION_MESSAGE);
        }else {
            LOGGER.log(Level.INFO, "Farmer Value");
            String result = (String)JOptionPane.showInputDialog(null, "Enter Message for Intern:");
	    UserAccount f = (UserAccount)  detailjTable.getValueAt(selectedRow,2) ;
            LOGGER.log(Level.INFO, "UserAccout" +f);
            LOGGER.log(Level.INFO, "UserAccout" +f.getFarmer());
               InternRequest request = (InternRequest)new InternRequest() ;
                request.setMessage(result);
                request.setFarmerUserAccount(f);
                request.setStatus("Sent to the Intern");       
                request.setRequestDate(dateFormat.format(date));
                request.setUserName(f.getUsername());
       
               
             LOGGER.log(Level.INFO, "UserAccout" +request.getFarmerUserAccount());
             LOGGER.log(Level.INFO, "UserAccout" +request.getFarmerUserAccount().getFarmer());
                     Organization org = null;
       
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            
            if (organization instanceof InternOrganization)
            {            
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }
        }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SupplierStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupplierStatusActionPerformed
        int selectedRow = detailjTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request from the table","Info", JOptionPane.INFORMATION_MESSAGE);
        }else {
            UserAccount f = (UserAccount)  detailjTable.getValueAt(selectedRow,2) ;
                
                 CardLayout layout = (CardLayout)container.getLayout();
      
                container.add("StatusSuppliesJPanel", new SuppliesStatusJPanel( f));
                layout.next(container); 
        }

    }//GEN-LAST:event_SupplierStatusActionPerformed

    private void loanStatus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loanStatus1ActionPerformed
       int selectedRow = detailjTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a request from the table","Info", JOptionPane.INFORMATION_MESSAGE);
        }else {
                UserAccount f = (UserAccount)  detailjTable.getValueAt(selectedRow,2) ;
                
                 CardLayout layout = (CardLayout)container.getLayout();
      
                container.add("StatusLoanJPanel", new LoanStatusJPanel( f));
                layout.next(container); 
        }

    }//GEN-LAST:event_loanStatus1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SupplierStatus;
    private javax.swing.JButton backBtton;
    private javax.swing.JTable detailjTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loanStatus1;
    private javax.swing.JButton searchjButton;
    private javax.swing.JTextField searchjTextField;
    // End of variables declaration//GEN-END:variables
}

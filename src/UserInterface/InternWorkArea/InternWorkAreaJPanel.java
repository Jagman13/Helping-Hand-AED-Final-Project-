/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.InternWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Farmers.Farmer;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BankRequest;
import Business.WorkQueue.InternRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jagman
 */
public class InternWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form InternWorkAreaJPanel
     */
    private JPanel container ;
    private Enterprise enterprise ;
    private UserAccount account ;
    private Organization org ;
    private EcoSystem system ;
    private final static Logger LOGGER =  
                Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);
    public InternWorkAreaJPanel(JPanel container, Enterprise enterprise ,UserAccount account , Organization org , EcoSystem system) {
        initComponents();
        this.container = container ; 
        this.enterprise = enterprise ; 
        this.account = account ; 
        this.system = system ; 
        this.org = org ; 
        populateTable();
    }
    
    
    private void populateTable(){
    
    
        DefaultTableModel model = (DefaultTableModel) detailjTable.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()){
             System.out.println("request" +request);
             
              InternRequest req=(InternRequest)request;
          
            Object[] row = new Object[7];
            row[0] = req.getFarmerUserAccount().getUsername();
            row[1] = req.getFarmerUserAccount().getFarmer().getEmail();
            row[2] = req.getUserName() ;
            row[3] = req.getStatus() == "Sent to the Intern" ? "Not Assigned" : req.getStatus();
            row[4] = request;
            row[5] = req.getRequestDate();  
            row[6] = req.getResolveDate();
            model.addRow(row);
    
    
    }}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        detailjTable = new javax.swing.JTable();
        assignjButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Intern Work Area");

        detailjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Farmer Name", "Email Address", "UserName", "Status", "Message", "Request Raised ", "Request Resolved"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(detailjTable);
        if (detailjTable.getColumnModel().getColumnCount() > 0) {
            detailjTable.getColumnModel().getColumn(0).setResizable(false);
            detailjTable.getColumnModel().getColumn(1).setResizable(false);
            detailjTable.getColumnModel().getColumn(2).setResizable(false);
            detailjTable.getColumnModel().getColumn(3).setResizable(false);
            detailjTable.getColumnModel().getColumn(4).setResizable(false);
        }

        assignjButton.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        assignjButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/assigntome.png"))); // NOI18N
        assignjButton.setText("Assign To Me ");
        assignjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignjButtonActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/create-account-Metro-icon.png"))); // NOI18N
        jButton1.setText("Login to User Portal ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/Icons/clear_refresh_Other-Power-Restart-Metro-icon.png"))); // NOI18N
        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(391, 391, 391))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(assignjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignjButtonActionPerformed
        int selectedRow = detailjTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request from the table","info",JOptionPane.INFORMATION_MESSAGE);
        } else {

            WorkRequest request = (WorkRequest) detailjTable.getValueAt(selectedRow, 4);
            
            if (request.getReceiver() != null) {
                JOptionPane.showMessageDialog(null, "This request has alread been assigned","info",JOptionPane.INFORMATION_MESSAGE);
            } else if(request.getStatus().equalsIgnoreCase("Completed") && (request.getResolveDate()!=null)) {
            
            JOptionPane.showMessageDialog(null, "This request is already completed","info",JOptionPane.INFORMATION_MESSAGE);
            }else {
                request.setReceiver(account);
                request.setStatus("Pending with" +account.getEmployee().getName());
              //  populateProcessTable();
                populateTable();
            }

        }
    }//GEN-LAST:event_assignjButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = detailjTable.getSelectedRow();
        
         if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request from the table","info",JOptionPane.INFORMATION_MESSAGE);
        } else {

            WorkRequest request = (WorkRequest) detailjTable.getValueAt(selectedRow, 4);
            UserAccount accountFarmer = request.getFarmerUserAccount();
            if(request.getStatus().equalsIgnoreCase("Completed") && (request.getResolveDate()!=null)) {
            
            JOptionPane.showMessageDialog(null, "This request is already completed","info",JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                CardLayout layout = (CardLayout)container.getLayout();
      
                container.add("ProcessRequestJPanel", new InternProcessRequestJPanel(container, system,enterprise ,accountFarmer, request));
                layout.next(container); 
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        populateTable();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignjButton;
    private javax.swing.JTable detailjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
